name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - name: Install System Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgmp-dev

    - uses: actions/checkout@v4

    - name: Cache OPAM
      uses: actions/cache@v4
      with:
        path: ~/.opam
        key: ${{ runner.os }}-opam-${{ hashFiles('**/_CoqProject') }}
        restore-keys: |
          ${{ runner.os }}-opam-

    - name: Set up OCaml and OPAM
      uses: ocaml/setup-ocaml@v3
      with:
        ocaml-compiler: '4.14.1'
        opam-repositories: |
          default: https://opam.ocaml.org
          coq-released: https://coq.inria.fr/opam/released

    - name: Create Clean OPAM Switch
      run: |
        SWITCH_NAME="collatz-proof"
        OCAML_VERSION="ocaml-base-compiler.4.14.1"

        echo "Removing existing switch if present..."
        opam switch remove "${SWITCH_NAME}" --yes || true

        echo "Creating OPAM switch '${SWITCH_NAME}' with OCAML ${OCAML_VERSION}..."
        opam switch create "${SWITCH_NAME}" "${OCAML_VERSION}" || { echo "Switch creation failed"; exit 1; }

        echo "Activating environment..."
        eval $(opam env --switch="${SWITCH_NAME}" --set-switch)

        echo "Adding OPAM repository..."
        opam repository add coq-released https://coq.inria.fr/opam/released --all-switches || { echo "Repository add failed"; exit 1; }
        opam update || { echo "OPAM update failed"; exit 1; }
        echo "Checking PATH..."
        echo $PATH

    - name: Pin Coq Version
      run: |
        echo "Listing available Coq versions..."
        opam list --all-versions coq > coq_versions.log
        cat coq_versions.log
        echo "Listing repository state..."
        opam repo list > repo_list.log
        cat repo_list.log
        echo "Pinning Coq 8.16.1..."
        opam pin add coq 8.16.1 -y --verbose --debug > pin_coq.log 2>&1 || { echo "Pinning failed"; cat pin_coq.log; opam list --all-versions coq; exit 1; }
        cat pin_coq.log
        echo "Updating environment..."
        eval $(opam env --switch=collatz-proof --set-switch)
        echo "Checking PATH..."
        echo $PATH

    - name: Install Coq
      run: |
        echo "Installing Coq 8.16.1..."
        opam install coq.8.16.1 -y --verbose --debug > install_coq.log 2>&1 || { echo "Coq 8.16.1 installation failed"; cat install_coq.log; opam list --all-versions coq; exit 1; }
        cat install_coq.log
        echo "Updating environment..."
        eval $(opam env --switch=collatz-proof --set-switch)
        echo "Checking PATH..."
        echo $PATH
        echo "Checking coqtop location..."
        which coqtop || { echo "coqtop not found in PATH"; exit 1; }

    - name: Verify Coq Installation
      run: |
        echo "Checking Coq version..."
        coqtop --version || { echo "coqtop binary not found in PATH"; exit 1; }
        echo "Listing installed packages..."
        opam list --installed > installed_packages.log
        cat installed_packages.log
        if ! grep -q "coq.*8.16.1" installed_packages.log; then
          echo "Coq 8.16.1 not found in installed packages"
          opam list --all-versions coq
          exit 1
        fi
        echo "Coq installation verified."

    - name: Install Dependencies
      run: |
        echo "Installing coq-elpi..."
        opam install -y --verbose --debug coq-elpi.2.5.2 > install_elpi.log 2>&1 || { echo "coq-elpi installation failed"; cat install_elpi.log; exit 1; }
        cat install_elpi.log
        echo "Installing coq-mathcomp-ssreflect..."
        opam install -y --verbose --debug coq-mathcomp-ssreflect.2.4.0 > install_mathcomp.log 2>&1 || { echo "coq-mathcomp-ssreflect installation failed"; cat install_mathcomp.log; exit 1; }
        cat install_mathcomp.log
        echo "Updating environment..."
        eval $(opam env --switch=collatz-proof --set-switch)

    - name: Compile Coq Project
      run: |
        echo "Activating environment..."
        eval $(opam env --switch=collatz-proof --set-switch)

        echo "Generating Makefile..."
        coq_makefile -f _CoqProject -o Makefile -extra '-w -elpi.linear-variable -elpi.missing-types' || { echo "coq_makefile failed"; exit 1; }

        echo "Inspecting Makefile..."
        cat Makefile

        echo "Compiling Coq project..."
        make -j1 V=1 || { echo "Compilation failed, showing errors:"; cat *.v.err; exit 1; }
        echo "Compilation complete."